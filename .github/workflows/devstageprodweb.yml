name: Terraform CI/CD

on:
  push:
    paths:
      - 'webModule/**'
  workflow_dispatch:

env:
  AZURE_CREDENTIALS: ${{secrets.AZURE_CREDENTIALS}}
  WORKING_DIR: ./webModule

jobs:
  dev_stage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create develop
        run: terraform workspace select develop || terraform workspace new dev
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply develop
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

      - name: Test develop
        run: curl $(terraform output -raw primary_web_endpoint)
        working-directory: ${{ env.WORKING_DIR }}

  stage_prod:
    needs: dev_stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create staging
        run: terraform workspace select staging || terraform workspace new staging
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply staging
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

      - name: Test staging
        run: curl $(terraform output -raw primary_web_endpoint)
        working-directory: ${{ env.WORKING_DIR }}

  prod:
    needs: stage_prod
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: ${{ steps.get_web_endpoint.outputs.WEB_ENDPOINT }} # replace deploy_prod and web_url with actual output variables
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create production
        run: terraform workspace select production || terraform workspace new production
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply production
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

      - name: Test production
        run: curl $(terraform output -raw primary_web_endpoint)
        working-directory: ${{ env.WORKING_DIR }}

      - name: Get Web Endpoint
        id: get_web_endpoint
        run: echo "WEB_ENDPOINT=$(terraform output -raw primary_web_endpoint)" 
        working-directory: ${{ env.WORKING_DIR }}
