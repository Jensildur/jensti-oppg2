name: Terraform CI/CD

on:
  push:
    branches-ignore: ["main", "staging"]
  workflow_dispatch:

env:
  AZURE_CREDENTIALS: ${{secrets.AZURE_CREDENTIALS}}
  AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
  AZURE_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
  AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
  AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}

jobs:
  dev_stage:
    name: "Dev and Staging"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Terraform init
        id: init
        run: terraform init 
        
      - name: Terraform workspace select or create develop
        id: workspace
        run: terraform workspace select develop || terraform workspace new dev
      
      - name: Terraform apply develop
        id: apply
        run: terraform apply -auto-approve

      - name: Test develop
        id: test
        run: curl $(terraform output -raw primary_web_endpoint)

  stage_prod:
    needs: dev_stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Terraform init
        run: terraform init
        
      - name: Terraform workspace select or create staging
        run: terraform workspace select staging || terraform workspace new staging
      
      - name: Terraform apply staging
        run: terraform apply -auto-approve

      - name: Test staging
        run: curl $(terraform output -raw primary_web_endpoint)

  prod:
    needs: stage_prod
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: ${{ steps.get_web_endpoint.outputs.WEB_ENDPOINT }} # replace deploy_prod and web_url with actual output variables
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Terraform init
        run: terraform init
        
      - name: Terraform workspace select or create production
        run: terraform workspace select production || terraform workspace new production
      
      - name: Terraform apply production
        run: terraform apply -auto-approve

      - name: Test production
        run: curl $(terraform output -raw primary_web_endpoint)

      - name: Get Web Endpoint
        id: get_web_endpoint
        run: echo "WEB_ENDPOINT=$(terraform output -raw primary_web_endpoint)" 
